{
  "info": {
    "_postman_id": "ebdc4eb9-7cdc-4d7c-a3e8-7d075a3d61c4",
    "name": "feature",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "36858233"
  },
  "item": [
    {
      "name": "Получение всех коментариев по событию",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "const main = async () => {\r",
              "    const api = new API(pm);\r",
              "    const rnd = new RandomUtils();\r",
              "\r",
              "    try {\r",
              "        const user  = await api.addUser(rnd.getUser());\r",
              "        const user2 = await api.addUser(rnd.getUser());\r",
              "        const user3 = await api.addUser(rnd.getUser());\r",
              "\r",
              "        const category = await api.addCategory(rnd.getCategory());\r",
              "        const event = await api.addEvent(user.id, rnd.getEvent(category.id));\r",
              "        \r",
              "        const commentU2 = await api.addComment(user2.id,event.id,rnd.getComment(user2.id,event.id));\r",
              "        const commentU3 = await api.addComment(user3.id,event.id,rnd.getComment(user3.id,event.id));\r",
              "\r",
              "        pm.collectionVariables.set(\"eid\", event.id)\r",
              "        \r",
              "    } catch(err) {\r",
              "        console.error(\"Ошибка при подготовке тестовых данных.\", err);\r",
              "    }\r",
              "};\r",
              "\r",
              "const interval = setInterval(() => {}, 1000);\r",
              "\r",
              "setTimeout(async () => \r",
              "    {\r",
              "        try {\r",
              "            await main();\r",
              "        } catch (e) {\r",
              "            console.error(e);\r",
              "        } finally {\r",
              "            clearInterval(interval);\r",
              "        }\r",
              "    },  \r",
              "    100 \r",
              ");"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
              "    pm.response.to.be.ok;    \r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});\r",
              "\r",
              "const source = pm.collectionVariables.get('response');\r",
              "const target = pm.response.json();\r",
              "\r",
              "\r",
              "pm.test(\"Данные в ответе должны соответствовать данным в запросе\", function () {\r",
              "    pm.expect(source.eventId).equal(target.eventId, 'Идентификатор собтия по которому получают коментарии должен соответствовать идентификатору коментария, созданного ранее');\r",
              "  \r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/comments/:eventId",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "comments",
            ":eventId"
          ],
          "variable": [
            {
              "key": "eventId",
              "value": "{{eid}}",
              "description": "код теущего события"
            }
          ]
        }
      },
      "response": []
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "packages": {},
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "eventid",
      "value": "1",
      "type": "default"
    },
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "default"
    },
    {
      "key": "uid",
      "value": "1",
      "type": "default"
    },
    {
      "key": "eid",
      "value": "1",
      "type": "default"
    },
    {
      "key": "response",
      "value": ""
    },
    {
      "key": "comid",
      "value": "1",
      "type": "default"
    }
  ]
}