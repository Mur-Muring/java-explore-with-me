{
  "info": {
    "_postman_id": "ebdc4eb9-7cdc-4d7c-a3e8-7d075a3d61c4",
    "name": "feature",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "36858233"
  },
  "item": [
    {
      "name": "Создание пользователя",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Test User\",\n  \"email\": \"testuser@example.com\"\n}"
        },
        "url": {
          "raw": "http://localhost:8080/users",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "users"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 201\", function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "var jsonData = pm.response.json();",
              "pm.test(\"Response contains required fields\", function () {",
              "    pm.expect(jsonData).to.have.property('id');",
              "    pm.expect(jsonData).to.have.property('name');",
              "    pm.expect(jsonData).to.have.property('email');",
              "});",
              "",
              "pm.environment.set(\"userId\", jsonData.id);"
            ]
          }
        }
      ]
    },
    {
      "name": "Создание события",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"annotation\": \"Аннотация события для теста создания, более 20 символов\",\n  \"category\": 1,\n  \"description\": \"Описание события для теста создания, более 20 символов для прохождения валидации.\",\n  \"eventDate\": \"2025-03-12T12:00:00\",\n  \"location\": {\n    \"lat\": 55.7522,\n    \"lon\": 37.6156\n  },\n  \"paid\": false,\n  \"participantLimit\": 100,\n  \"requestModeration\": true,\n  \"title\": \"Test Event Title\"\n}"
        },
        "url": {
          "raw": "http://localhost:8080/users/{{userId}}/events",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "users",
            "{{userId}}",
            "events"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 201\", function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "var jsonData = pm.response.json();",
              "pm.environment.set(\"eventId\", jsonData.id);"
            ]
          }
        }
      ]
    },
    {
      "name": "Добавление собственного комментария",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"text\": \"Тестовый комментарий\"\n}"
        },
        "url": {
          "raw": "http://localhost:8080/users/{{userId}}/comments?eventId={{eventId}}",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "users",
            "{{userId}}",
            "comments"
          ],
          "query": [
            {
              "key": "eventId",
              "value": "{{eventId}}"
            }
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {"type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 201\", function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "pm.test(\"Response contains required fields\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('id');",
              "    pm.expect(jsonData).to.have.property('text');",
              "    pm.expect(jsonData).to.have.property('authorId');",
              "    pm.expect(jsonData).to.have.property('eventId');",
              "    pm.expect(jsonData).to.have.property('created');",
              "    pm.expect(jsonData).to.have.property('lastUpdatedOn');",
              "});"
            ]
          }
        }
      ]
    }
  ]
}